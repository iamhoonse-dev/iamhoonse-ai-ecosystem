name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.filter.outputs.packages }}
      apps: ${{ steps.filter.outputs.apps }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            packages:
              - 'packages/**'
            apps:
              - 'apps/web/**'
            docs:
              - 'apps/docs/**'

  lint-and-typecheck:
    needs: changes
    runs-on: ubuntu-latest
    if: needs.changes.outputs.packages == 'true' || needs.changes.outputs.apps == 'true' || needs.changes.outputs.docs == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Type check
        run: pnpm check-types

      - name: Format check
        run: pnpm format:check

  build:
    needs: [changes, lint-and-typecheck]
    runs-on: ubuntu-latest
    if: needs.changes.outputs.packages == 'true' || needs.changes.outputs.apps == 'true' || needs.changes.outputs.docs == 'true'
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Cache build outputs
        uses: actions/cache@v4
        with:
          path: |
            apps/**/dist
            apps/**/.next
            packages/**/dist
          key: ${{ runner.os }}-build-${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ matrix.node-version }}-
            ${{ runner.os }}-build-

  test:
    needs: [changes, lint-and-typecheck]
    runs-on: ubuntu-latest
    if: needs.changes.outputs.packages == 'true' || needs.changes.outputs.apps == 'true'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: |
          if [ -f "package.json" ] && grep -q '"test"' package.json; then
            pnpm test
          else
            echo "No tests configured yet"
          fi
        continue-on-error: true